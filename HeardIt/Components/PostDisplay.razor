@using HeardIt.Models
@using HeardIt.Helpers


<div class="rounded mx-8 my-16 overflow-hidden border w-full lg:w-10/12 md:10-6/12 bg-white shadow-2xl">
    <div class="w-full flex justify-between items-center p-3 bg-gradient-to-r from-indigo-900 to-indigo-600">
        <span class="h-full font-bold text-lg text-white">
            @if (PostLoading || Post == null)
            {
                <p>Loading...</p>
            }
            else
            {
                @Post.Data.Subreddit
            }
        </span>
        <button @onclick="OpenSettingsDialog" type="button" class="w-full inline-flex justify-center rounded-md border border-white shadow-sm px-4 py-2 bg-transparent text-base font-medium text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:ml-3 sm:w-auto sm:text-sm">
            Subreddit Settings
        </button>
    </div>
    <div class="px-3 pb-2 shadow-inner" id="@Post?.Data.Id">
        <div class="pt-1">
            <div class="my-2 font-bold text-black text-center text-gray-900 flex flex-row justify-center">
                @if (PostLoading || Post == null)
                {
                    <svg class="animate-spin -ml-1 mr-3 h-8 w-8" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                }
                else
                {
                    @Post.Data.Title
                }
            </div>
        </div>
        @if (Post != null && !PostLoading)
        {
            if (!string.IsNullOrEmpty(Post.Data.Selftext))
            {
                <div class="pt-1">
                    <div class="mb-2 text-sm text-black text-center">
                        @Post.Data.Selftext
                    </div>
                </div>
            }
        }
    </div>
    <div class="px-3 py-1 shadow-inner bg-gray-50">
        <div class="flex flex-row justify-between">
            @if (PostLoading || Post == null)
            {
                <span class="text-gray-400">Loading...</span>
                <span class="text-gray-400">Loading...</span>
            }
            else
            {
                <span class="text-gray-400">
                    @{
                        var utcDate = Post.Data.CreatedUtc;
                        var start = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);
                        var date = start.AddSeconds(Convert.ToDouble(utcDate)).ToLocalTime();
                        @date.ToString("yyyy-MM-dd")
                    }
                </span>
                <a href="@Post.Data.Url" class="underline text-gray-400 hover:text-gray-800 visited:text-purple-600">View On Reddit</a>
            }
        </div>
    </div>
</div>

@code {

    [Parameter]
    public Post? Post { get; set; }

    [Parameter]
    public bool PostLoading { get; set; }

    [Parameter]
    public Action? OpenSettingsDialog { get; set; }

}